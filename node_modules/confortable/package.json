{
  "author": {
    "name": "Eirik Albrigtsen",
    "email": "analsandblaster@gmail.com"
  },
  "name": "confortable",
  "description": "Finds the right recursively placed config file",
  "version": "1.0.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/clux/confortable"
  },
  "keywords": [
    "config",
    "finder",
    "recursive",
    "comfortable",
    "nottypo"
  ],
  "main": "confortable.js",
  "scripts": {
    "test": "nodeunit --reporter=verbose test/*.js",
    "precoverage": "jscoverage confortable.js",
    "coverage": "CONFORTABLE_COV=1 nodeunit --reporter=lcov test/*.js"
  },
  "devDependencies": {
    "nodeunit": "^0.9.0",
    "jscoverage": "^0.5.5"
  },
  "license": "MIT",
  "readme": "# Confortable\n[![npm status](http://img.shields.io/npm/v/confortable.svg)](https://www.npmjs.org/package/confortable)\n[![build status](https://secure.travis-ci.org/clux/confortable.svg)](http://travis-ci.org/clux/confortable)\n[![dependency status](https://david-dm.org/clux/confortable.svg)](https://david-dm.org/clux/confortable)\n[![coverage status](http://img.shields.io/coveralls/clux/confortable.svg)](https://coveralls.io/r/clux/confortable)\n\nConfortable is a lightweight config file locator. It will look at the execution cwd, and if no config matching the name is found, and the cwd is inside $HOME, it will keep going up one directory until it hits $HOME. Example usage can be seen in [logule](https://github.com/clux/logule/blob/master/logule.js#L6). and [combustion](https://github.com/clux/combustion/blob/master/lib/precompiler.js#L4).\n\nIt does not parse the config, and thus does not enforce any structure upon the config file itself.\nIt simply returns the best existing path || null.\n\n## Usage\nBasic usage:\n\n```js\nvar conf = require('confortable');\nconfPath = conf('.confName'); // if non-null, this can be read by fs or required if js compatible\n```\n\nOptionally, a start directory (if cwd isn't sufficient) can be specified for the search start:\n\n```js\nvar confPath = require('confortable')('.combustion', templateDir);\n```\n\nA final optional setting is a fallback directory, in case the recursive search fails, but you still want to see if a config exists somewhere else (like say the path of the parent module). In this use case, you have to specify the start as well.\n\n```js\nvar fallback = require('path').dirname(module.parent.filename);\nvar confPath = require('confortable')('.logule', process.cwd(), fallback);\n```\n\n## Installation\n\n```bash\n$ npm install confortable\n```\n\n## License\nMIT-Licensed. See LICENSE file for details.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/clux/confortable/issues"
  },
  "_id": "confortable@1.0.0",
  "_from": "confortable@^1.0.0"
}
