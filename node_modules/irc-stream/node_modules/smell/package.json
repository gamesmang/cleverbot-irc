{
  "name": "smell",
  "description": "Smelly log emissions",
  "author": {
    "name": "Eirik Albrigtsen",
    "email": "analsandblaster@gmail.com"
  },
  "version": "2.0.6",
  "repository": {
    "type": "git",
    "url": "git://github.com/clux/smell"
  },
  "keywords": [
    "log",
    "event",
    "emitter"
  ],
  "main": "smell.js",
  "scripts": {
    "test": "nodeunit --reporter=verbose test/*.js",
    "precoverage": "jscoverage smell.js",
    "coverage": "SMELL_COV=1 nodeunit --reporter=lcov test/*.js"
  },
  "dependencies": {},
  "devDependencies": {
    "jscoverage": "^0.5.9",
    "nodeunit": "^0.9.1"
  },
  "bugs": {
    "url": "http://github.com/clux/smell/issues"
  },
  "license": "MIT",
  "readme": "# Smell\n[![npm status](http://img.shields.io/npm/v/smell.svg)](https://www.npmjs.org/package/smell)\n[![build status](https://secure.travis-ci.org/clux/smell.svg)](http://travis-ci.org/clux/smell)\n[![dependency status](https://david-dm.org/clux/smell.svg)](https://david-dm.org/clux/smell)\n[![coverage status](http://img.shields.io/coveralls/clux/smell.svg)](https://coveralls.io/r/clux/smell)\n\nThe smelly place where logs are emitted. Subscribe and get strings from `info`, `warn` and `err` events. (Not using `error` since this bubbles up to an uncaughtError)\n\n## Basic Idea\nLibraries should never rely on full logging libraries - how to log is an app decision. Thus, libraries can add this .._emission_, expose it, and hope someone else deals with it.\n\n## Usage\nCreate an instance, emit logs to it then expose it from your library somehow:\n\n```js\n// in some-module\nvar log = require('smell')();\nlog.info('some module is doing work');\nlog.warn('this ok?')\nlog.error('this is not ok:', failObject);\n\nexports.log = log;\n\n// in app.js\nvar em = require('some-module');\nem.on('info', console.log);\nem.on('warn', console.warn);\nem.on('err', console.error);\n```\n\n## License\nMIT-Licensed. See LICENSE file for details.\n",
  "readmeFilename": "README.md",
  "_id": "smell@2.0.6",
  "_from": "smell@^2.0.6"
}
