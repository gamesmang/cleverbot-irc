{
  "name": "dye",
  "author": {
    "name": "Eirik Albrigtsen",
    "email": "analsandblaster@gmail.com"
  },
  "description": "Coloring library for console strings",
  "version": "1.0.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/clux/dye"
  },
  "keywords": [
    "color",
    "terminal",
    "ANSI",
    "escape",
    "sequence",
    "console",
    "chalk",
    "minimalistic"
  ],
  "main": "dye.js",
  "scripts": {
    "test": "nodeunit test/*.js",
    "coverage": "jscoverage dye.js && DYE_COV=1 nodeunit --reporter=lcov test"
  },
  "dependencies": {},
  "devDependencies": {
    "nodeunit": "~0.9.0",
    "jscoverage": "~0.5.4"
  },
  "bugs": {
    "url": "http://github.com/clux/dye/issues"
  },
  "license": "MIT",
  "readme": "# dye\n[![npm status](http://img.shields.io/npm/v/dye.svg)](https://www.npmjs.org/package/dye)\n[![build status](https://secure.travis-ci.org/clux/dye.svg)](http://travis-ci.org/clux/dye)\n[![dependency status](https://david-dm.org/clux/dye.svg)](https://david-dm.org/clux/dye)\n[![coverage status](http://img.shields.io/coveralls/clux/dye.svg)](https://coveralls.io/r/clux/dye)\n\nDye is a coloring/styling library for wrapping common ANSI escape sequences around text that produce colors/styling when logged to a terminal.\n\nThe interface mostly mirrors the popular `colors` module on `npm`, but does not introduce implicit global dependencies in your code via `String.prototype`, and has been cleaned up for terminal use only.\n\n## Usage\nBasic usage is simply `dye.red(str)`. All the exported colors with `bold` (aka bright) variants should work everywhere. Here we test all the methods in both variants.\n\n```js\nvar dye = require('dye');\nvar cols = ['white', 'black', 'grey', 'blue', 'cyan', 'green', 'magenta', 'red','yellow'];\ncols.forEach(function (col) {\n  var colored = dye[col](col);\n  console.log(colored);\n  console.log(dye.bold(colored));\n});\n```\n\n![example output!](https://github.com/clux/dye/raw/master/imgs/output.png)\n\n## Experimental\nThe `inverse`, `underline`, `italic` functions have sparse support (no worky on windows).\n\n### Installation\n\n```sh\n$ npm install dye\n```\n\n## License\nMIT-Licensed. See LICENSE file for details.\n",
  "readmeFilename": "README.md",
  "_id": "dye@1.0.1",
  "_from": "dye@^1.0.0"
}
